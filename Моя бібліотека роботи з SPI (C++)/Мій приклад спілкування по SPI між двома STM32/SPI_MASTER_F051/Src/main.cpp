/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#include <stdint.h>
#include <stm32f0xx.h>

#include "Gpio.h"
#include "SPI.h"
#include "uart.h"

#define READ_REQUEST 0x1234
#define REGISTER_VALUE 0x1122

Uart Debug = Uart(USART1, 115200);

void Delay(uint32_t delay);

int main(void) {

	Debug.SendString("Wait interrupt request\n");
	RFM69 Modem = RFM69(SPI1, GPIOC, 4, GPIOC, 5);
	SPI SPI_PORT = SPI(SPI1);

	uint16_t RxData = 0;
	/* Loop forever */
	while (1) {
		Delay(1000000);
		SPI_PORT.nCS_Low();
		SPI_PORT.TransmitReceive16B(READ_REQUEST);
		RxData = SPI_PORT.TransmitReceive16B(0xFF);
		SPI_PORT.nCS_High();
		if (RxData == REGISTER_VALUE)
			Debug.SendString("Receive OK!\n");
		else
			Debug.SendString("Receive Error\n");


	}
}


void Delay(uint32_t delay)
{
 for(int i =0; i<=delay; i++)
 {}
}
